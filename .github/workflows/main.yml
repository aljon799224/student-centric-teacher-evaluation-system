name: fastapi-postgresql

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12
        cache: poetry

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create false
        poetry config virtualenvs.in-project false

    - name: Install dependencies
      run: poetry install --no-root --no-interaction --no-ansi

    - name: Run pre-commit hooks
      run: poetry run pre-commit run --all-files --show-diff-on-failure

    - name: Create .env file
      run: |
        echo "Creating .env file..."
        cat <<EOF > $GITHUB_WORKSPACE/.env
        SQLALCHEMY_DATABASE_URL=postgresql://user:password@db:5432/db
        POSTGRES_DB=db
        POSTGRES_USER=user
        POSTGRES_PASSWORD=password
        PGADMIN_DEFAULT_EMAIL=admin@yahoo.com
        PGADMIN_DEFAULT_PASSWORD=admin
        EOF
        cat $GITHUB_WORKSPACE/.env  # Debugging step

    - name: Stop any existing Docker containers
      run: docker compose down -v || true

    - name: Start Docker Compose
      run: docker compose up -d --build

    - name: Wait for Database to be Ready
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        for i in {1..30}; do
          docker compose exec db pg_isready -U user -d db && break
          echo "Waiting..."
          sleep 2
        done
        echo "PostgreSQL is up."

    - name: Reset Database Schema
      run: |
        docker compose exec db psql -U user -d db -c "DROP SCHEMA public CASCADE; CREATE SCHEMA public;"

    - name: Run Alembic Migrations
      run: docker compose exec web poetry run alembic upgrade head

    - name: Run Tests with Coverage
      run: docker compose exec web poetry run pytest --cov=app --cov-report term-missing -vv

    - name: Stop Docker Containers
      if: always()
      run: docker compose down -v
